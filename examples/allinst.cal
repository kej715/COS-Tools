         TITLE     'Sample Test Program'
         SUBTITLE  '  References all machine instructions'
         IDENT     test
         COMMENT   'Test program'
         BASE      M
         EXT       X
**
*  This CAL source file serves to validate that the assembler is
*  processing machine instructions correctly. It includes examples
*  of every machine instruction, as defined in
*
*              Cray X-MP and Cray-1 Computer Systems
*                  Symbolic Machine Instructions
*                       Reference Manual
*                            SR--85
*
*  The listing file generated by the assembler may be compared
*  against a previous snapshot of the listing file to verify that
*  the assembler has continued to process machine instructions
*  correctly.
*
MINUS1   =         -1
VAL      =         20

         ERR
         CA,A3     A5
         PASS
         CL,A3     A4
         CI,A1
         MC,A4
         MC,A0
         XA        A5
         RT        S2             ; set clock to low-order 32 bits
         RT        S0             ; set clock to 0
         SIPI      1              ; set interprocessor interrupt request
         SIPI
         IP        1
         CIPI                     ; clear interprocessor interrupt request
         IP        0
         CLN       0
         CLN       1
         CLN       2
         CLN       3
         PCI       S3             ; load the low-order 32 bits from (S3) to (II)
         CCI                      ; clear clock interrupt
         ECI                      ; enable clock interrupt
         DCI                      ; disable clock interrupt
TAG1     BSS       0
         VL        A3
         VL        1
TAG2     BSS       0
         EFI
         DFI
         ERI
         DRI
         DBM
         EBM
         CMR
TAG3     BSS       0
         VM        S4
         VM        0
         SM7       1,TS
         SM7       0
         SM7       1
         EX
RTNADDR  =         3
         J         B17
         J         B.RTNADDR
         J         TAG1
         J         LDY3+1
         J         *+3
         R         HELP
LDY3     BSS       0
HELP     BSS       0
         JAZ       TAG3+2
         JAN       TAG4
         JAP       TAG2
         JAM       TAG1
         JSZ       TAG2
         JSN       TAG1+2
         JSP       *+3
         JSM       TAG4
*
*        Ai exp
*
TAG4     BSS       0
         A3        O'10
         A2        #O'10
AREG     =         2
         A.AREG    -O'10
         A2        O'130
         A3        VAL+1
         A4        O'1777777
         A5        A'SY'R
         A6        #MINUS1
         A3        -1
         A4        X-1
         A4        S2
         A2        VL
         A5        B17
SVNTN    =         O'17
         A5        B.SVNTN
         B34       A6
THRTY4   =         O'34
         B.THRTY4  A6
         A7        PS2
         A2        QS7
         A0        SB0
         A0        SB1
         A1        ZS3
         SB0       A0
         SB0       A1
         A1        A2+A3
         A1        A2
         A2        A3+1
         A6        A2
         A4        A5-A6
         A1        -A2
         A4        A5-A1
         A7        -A3
         A3        -1
         A7        A1*A2
         A1        CI
         A2        CA,A3
         A3        CE,A4
         B7,A4     ,A0
BB       =         O'22
FWAR     =         5
         B.BB,A.FWAR 0,A0
         ,A0       B22,A5
         0,A0      B.BB,A.FWAR
         T7,A4     ,A0
TT       =         O'22
         T.TT,A.FWAR 0,A0
         ,A0       T22,A5
         0,A0      T.TT,A.FWAR
*
*        Si exp
*
         S2        O'130
SREG     =         3
         S.SREG    VAL+1
         S4        O'1777777
         S5        A'SY'R
         S6        #MINUS1
         S2        -1
         S3        #2
         S4        -O'1777777
VAL2     =         3
         S4        #VAL2
         S1        X-1
         S2        -1
         S2        <5
         S2        #>O'73
         S3        <D'10
         S4        <O'100
         S5        <0
         S6        0
         S6        1
         S2        >5
         S2        #<O'73
         S2        S3&S5
         S6        S5&S5          ; S5 to S6
         S1        S6&SB          ; Get sign bit of S6
         S1        SB&S6          ; Get sign bit of S6
         S2        #S1&S7
         S4        #SB&S3         ; Clear sign bit of S3 and enter into S4
         S5        #S6&S0         ; Clear S5
         S6        #SB&S7         ; Clear sign bit
         S1        S2\S3
         S4        S5\S5          ; Clear S4
         S5        S0\S6          ; S6 to S5
         S7        S7\SB          ; Toggle sign bit
         S3        #S4\S5
         S2        #S6\SB
         S2        #SB\S6
         S2        #S3
         S2        #SB
         S1        S2!S1&S3
         S7        S6!S7&S0
         S4        S7!S2
         S3        S6!S6
         S7        SB!S1
         S7        S1
I        SET       1
         S.I       SB
         S0        S3<5
         S0        S7<VAL+4
         S0        S3>5
         S0        S0>D'10
         S0        S7>VAL+4
         S0        S1>0
         S7        S7<3
         S6        S6<VAL+2
         S7        S7>3
         S6        S6>VAL+2
         S2        S2,S3<A5
         S3        S3,S4<1        ; Left 1 place
         S6        S6<A4
         S2        S3,S2>A5
         S6        S6>A4
         S3        S4,S3>1        ; Right 1 place
         S2        S3+S7
         S4        S0+S5
         S1        S2-S3
         S5        -S6
         S3        S4+FS5
         S4        +FS4
         S3        -FS2
         S7        S6-FS1
         S2        S3*FS4
         S1        S6*HS7
         S1        S4*RS7
         S3        S2*IS4
*        Divide S1 by S2; result to S1
         S3        /HS2           ; Approximate reciprocal
         S1        S1*FS3         ; Approximate result
         S2        S2*IS3         ; Correction factor
         S1        S1*FS2
*        Divide S1 by S2 with result accurate to 30 bits
         S3        /HS2
         S3        S1*HS3
*        Integer divide A1 by A2; result to A3
         S2        +FA2           ; Denominator
         S1        +FA1           ; Numerator
         S2        S0+FS2         ; Normalize
         S1        S0+FS1
         S2        /HS2           ; Reciprocal approximation to 1/D
         S1        S1*HS2         ; Rounded half-precision multiply
         S2        0.6
         S1        S1+FS2         ; Fix quotient
         A3        S1             ; 24-bit signed result to A3

         S7        A7
         S7        +A7
         S3        +FA4
FIX      =         6
         S.FIX     0.6
         S2        0.4
         S3        1.
         S4        2.
         S5        4.
*        Fix a floating-point number in S1
*        Separate integer and fractional parts
         S2        0.6
         S3        S1+FS2
         A1        S3             ; Integer part
         S3        S3-FS2         ; Floating-point integer part
         S1        S1-FS3         ; Fractional part
         S7        RT
         S0        SM
         S6        SM
         S0        ST0
         S0        ST1
         S2        VM
         S0        SR0
         S3        SR0
         SM        S0
         SM        S1
         SM        S5
         ST0       S0
         ST0       S1
         S3        T6
         S5        T66
         T6        S3
         T67       S5
         S4        V5,A6
I        SET       4
J        SET       5
K        SET       6
         S.I       V.J,A.K
         V1,A7     S6
         V6,A2     0
CON      =         4647
CON1     =         4520
ADDR     =         3000
         A1        CON1,A0
         A2        CON1,0
         A3        CON1+1,A1
         A4        -1,A2
         A5        ADDR,
         A6        CON,A4
         A6        ,A4
         A1        1,A6
         A2        O'177,A7
         CON1,A0   A1
         CON1,0    A2
         CON1+1,A1 A3
         -1,A2     A4
         ADDR,     A5
         CON,A4    A6
         ,A4       A6
         1,A6      A1
         O'177,A7  A2
         S1        CON1,A0
         S2        CON1,0
         S3        CON1+1,A1
         S4        -1,A2
         S5        ADDR,
         S6        CON,A4
         S6        ,A4
         S1        1,A6
         S2        O'177,A7
         CON1,A0   S1
         CON1,0    S2
         ,A4       S6
         -1,A2     S4
         ADDR,     S5
         V1        S2&V3
         V2        V5&V7
         V0        V3&V3
         V6        S1!V5
         V1        V2
         V7        V1!V4
         V2        S6\V7
         V5        V1\V3
         V5        0
         V7        S2!V6&VM
         V6        #VM&V7
         V1        V2!V3&VM
         V1        V2<A3
         V4        V5<1           ; Left 1 place
         V3        V4>A1
         V4        V5>1           ; Right 1 place
         V5        V4,V4<A1
         V5        V4,V4<1
         V0        V2,V2>A6
         V0        V2,V2>1
         V2        S1+V3
         V4        V5+V6
         V7        S1-V2
         V1        -V2
         V3        V4-V5
         V6        S2*FV7
         V1        V2*FV3
         V4        S5*HV6
         V7        V1*HV2
         V3        S1*RV4
         V5        V6*RV7
         V1        S2*IV3
         V4        V5*IV6
         V7        S1+FV2
         V5        +FV1           ; Normalize (V1) to V5
         V2        V3+FV4
         V5        S1-FV6
         V7        V1-FV2
         V3        -FV4
*        Divide elements of V1 by elements of V2; Result to V6
         V3        /HV2
         V4        V1*FV3
         V5        V3*IV2
         V6        V4*FV5
*        Divide elements V1 by elements of V2; Result accurate to 30 bits, result to V6
         V3        /HV2
         V6        V1*HV3
*        Divide S1 by elements of V2; Result to V6
         V3        /HV2
         V4        S1*FV3
         V5        V3*IV2
         V6        V4*FV5
         V3        PV1            ; Pop count of V1 to V3
         V5        QV2            ; Pop count parity of V2 to V5
         VM        V5,Z
         VM        V6,N
         VM        V7,P
         VM        V1,M
         V1,VM     V5,Z
         V2,VM     V6,N
         V3,VM     V7,P
         V4,VM     V1,M
         V2        ,A0,A1
         V2        ,A0,V3
         V5        ,A0,1
         ,A0,A2    V3
         ,A0,V5    V6
         ,A0,1     V3

         END
