      SUBROUTINE LISPF4(IREE)
      INCLUDE 'F4COM.FOR'
      COMMON /PROMPT/PROTXT(80),PROLEN
      INTEGER PROTXT,PROLEN
      INTEGER OPENF
C     THIS IS A MODIFIED LISPF3 THAT USE A STACK
C     AND NOT A A-LIST FOR VARIABLE BINDINGS.
C
C               LOCAL DECLARATIONS
C               ==================
C
      INTEGER ARGS(10)
      LOGICAL NLISTP,GREAT,SPECAT,APLYFL,NOEVAL,ILLENV,FORMFL
      INTEGER CONS,SUBPR,EQUAL,GET,GETCHT,GETPN,RATOM,COMPPN,
     * GARB,GETNUM,ROLLIN,XCALL,INDEX,IOTAB(10),IPNAME(1)
      INTEGER*2 JPNAME(1),JDUMMY
      REAL NARR(1),RARGS(1)
      EQUIVALENCE (LUNIN,IOTAB(1)),(IRES,ARG),(N,NARR(1))
      EQUIVALENCE (ARG,ARGS(1),RARGS(1)),(PNAME(1),IPNAME(1),JPNAME(1))
      NLISTP(IDUMMY) = IDUMMY.LE.NATOM .OR. IDUMMY.GT.NFREET
      GREAT(IDUMMY) = IDUMMY.LT.-ISMALL .OR. IDUMMY.GT.ISMALL
C      SPECAT(JDUMMY) = JDUMMY.EQ.STRING .OR. JDUMMY.EQ.SUBSTR
C     * .OR. JDUMMY.EQ.ARRAY
      SPECAT(JDUMMY) =  JDUMMY.LE.SUBSTR .AND. JDUMMY.GE.ARRAY
      NUPAIR(IDUMMY,IDUMMZ) = CONS(MKNUM(IDUMMY/IDUMMZ),
     *       MKNUM(MOD(IDUMMY,IDUMMZ)))
      ILLENV(II) = II.GT.TOPS .OR.(II.NE.0 .AND. JACK(II).GT.0)
2      GOTO (10,1 ,1 ),IREE
C          INI STA REE
10    CONTINUE
      CALL MESS(20)
      PRTPOS = 12
      CALL IPRINT(CONS(83+NUMADD, CONS(08+NUMADD, CONS(22+NUMADD,NIL))))
      CALL MESS(22)
      PRTPOS = 12
      I = NUMBP-DPNP-2
      J = NUMBP-(JBP-2)/BYTES-3
      IF (J.LT.I) I = J
      CALL IPRINT(CONS(MKNUM(NFREEP-NFREEB),
     *              CONS(NUMADD+ISMALL,
     *                CONS(MKNUM(I),
     *                  CONS(MKNUM(NATOM-NATOMP), NIL)))))
C               RESTART OF INTERPRETER
C               -----------------------------
1     IP = 1
      JP=NSTACK+1
      IPP=0
      JPP=0
      CALL MESS(17)
C*SETC*      CALL SETCAR(NIL,NIL)
       CAR(NIL)=NIL 
C*SETC*      CALL SETCDR(NIL,NIL)
       CDR(NIL)=NIL 
C*SETC*      CALL SETCAR(T,T)
       CAR(T)=T 
      IFLG1 = NUMADD
      CALL TERPRI
      IFLG1 = NIL
      IFLG2 = NIL
      CHT = 1
      RDPOS = 1000
      LUNIN=LUNINS
      FORM=NIL
      HILLW=HILL - 150
      MIDDL=NSTACK/10
      ISPLFT=400
      IBREAK=.FALSE.
      ARG = LISPX
      ARG2 = NIL
      ENV=0
      TOPS=0
      CALL GETCH(1H_,PROTXT(1),1)
      PROLEN=1
      GOTO 1500
C
C RECURSIVE RETURN PROCEDURE
C DROP TOP BLOCK
C
997   ENV=-JACK(TOPS)
C                                      ! RESTORE ENVIRONMENT
998   TOPS=JILL(TOPS)
C                                      ! DROP TOP BLOCK
999      I=STACK(IP)
         IP=IP-1
C
1000  GOTO (15013 ,2020  ,2620  ,2120  ,12185 ,997   ,1020  ,
     *      1710  ,1830  ,18060 ,20130 ,18100 ,18170 ,
     *      12260 ,18210 ,25090 ,25100 ,15010 ,998   ,12150 ,
     *      12290 ,12640 ,20095 ,1795  ,1778  ,1799  ,18012),I
C
C           APPLYS EVLIS  EVLAS  EVCON  EVSTK  &POPE  LISPX
C           EAPPL  FUNAR  SETQ   PROG   AND    OR
C           MAPC   SELEC  ?STOV  ?STUN  APPLA  &POP   EVALA  
C           MAPC   RPT    PROG   EVARGN EVARG  NOSP   FUNCTION   =27
C                             
      GOTO 25130
C                                        ! INTERNAL STACK PROBLEM
C
C
C RECURSIVE FUNCTION LISPX()
C-----------------------------------------------------------------------
C USE EVAL IN TOP LEVEL LOOP
C
1010  IBREAK=.FALSE.
      ARG=IREAD(0)
      CALL FPUSH(7)
      GOTO 1600
C
C--R7         RETURN POSITION FROM EVAL
C
1020  CALL IPRINT(IRES)
      CALL TERPRI
      GOTO 1010
C
C
C             RECURSIVE FUNCTION APPLY(ARG,ARG2)
C
1477  CALL FPUSH(19)
1500  IF (ARG.EQ.NIL) GOTO 999
      L=ARG
      APLYFL=.TRUE.
      ARG=CONS(L,ARG2)
      FORM=CONS(NIL,ARG)
      GOTO 1671
C                                      ! TO ENTRY EAPPLY(L,ARG2) IN EVAL
C
C               RECURSIVE FUNCTION EVAL(ARG)
C               ============================
C
1600  IF(IBREAK) GOTO 2400
      IF(TOPS.GT.HILLW) GOTO 25095
      IF(JP .LE. IP+MIDDL) GOTO 25090
C                                     ! THESE ARE THE ONLY
C                                     ! STACK-OVERFLOW TESTS NEEDED
      IF(ARG .GT. NATOM) GOTO 1660    
C                                     ! LIST OR NUMBER
      IF(ARG.EQ.NIL.OR.ARG.EQ.T)GOTO 999
      IF (SPECAT(CAR(ARG)))  GOTO 999
C
C            EVAL - ATOM.
C            ATOM NOT NIL, T, STRING,
C            ARRAY OR NUMBER. CHECK IF BOUND ON STACK
C
      LOCAL=ENV
      IF (LOCAL.LE.0)GOTO 1650
      GOTO 1620
1610  LOCAL=-JACK(LOCAL)
      IF (LOCAL.LE.0) GOTO 1650
1620  LOCALE=JILL(LOCAL)+2
      K=LOCAL
1630  K=K-1
      IF (K.LT.LOCALE) GOTO 1610
      IF (JACK(K).NE.ARG) GOTO 1630
      IRES=JILL(K)
      GOTO 999
C
C
C           ATOM NOT ON STACK CHECK VALUE CELL.
C
1650  IF(CAR(ARG).EQ.UNBOUN) GOTO 2200
C                                      ! 2200=FAULTEVAL(ARG)
      IRES=CAR(ARG)
      GOTO 999
C
C          HERE IF ARG NUMBER OR LIST
C          ==========================
C
1660  IF(ARG .GT. NFREET) GOTO 999 
C                                      ! IT'S A NUMBER
C
C              EVAL - LIST
C
      FORM=ARG
      L=CAR(ARG)
      ARG2=CDR(ARG)
C
C            EAPPLY(L,ARG2) . CALLED FROM EVAL AND FROM APPLY.
C
1670  APLYFL=.FALSE.
1671  LL=L
      IF(LL .GT. NATOM) GOTO 1720 
C                                      ! CAR OF FORM IS A LIST
C                                      ! HOPEFULLY (LAMBDA ...)
C                                      ! OR  (SUBR . ...)
C
C THE FOLLOWING CODE IS FOR AVOIDING CALLS TO GET FOR TESTING IF
C THERE IS ANY FUNCTION DEFINITION STORED UNDER THE FNCELL PROPERTY
      LL=CDR(L)
      IF(LL.EQ.NIL)GOTO 1676
      IF(CAR(LL).NE.FNCELL)GOTO 1677
      LL=CAR(CDR(LL))
      GOTO 1720
1677  LL=GET(L,FNCELL)
C                                      ! IS THERE ANYTHING IN FUNC.CELL?
      IF(LL .NE. NIL) GOTO 1720   
C                                      ! THERE WAS SOMETHING
1676  IF(L .GT. FSUBR) GOTO 2230  
C                                      ! 2230 = FAULTAPPLY(L)
      IF(L .GT. SUBR) GOTO 18000
C                                      ! 18000 = THE MATCH ROUTINE FOR FSUBRS.
      IF(L .EQ. NIL) GOTO 2230
C
C
C     SUBR CASE
C     =========
C
C      
C      1. PUT THE BOTOM BLOCK
C
1680  IPREV=TOPS
C                                      ! SAVE OLD TOPS
      TOPS=TOPS+1
      JACK(TOPS)=L
      JILL(TOPS)=ARG
C                                      ! WE PUSH *FORM AND ARG
C
C      2.  SPREAD THE ARGS
C
1690  IF (NLISTP (ARG2)) GOTO 1695
C                                      ! ARG2 HOLDS THE ARGLIST
      TOPS=TOPS+1
      JACK(TOPS)=SUBARG
      JILL(TOPS)=CAR(ARG2)
      ARG2=CDR(ARG2)
      GOTO 1690
C      3.  PUT TOP BLOCK
C
1695  TOPS=TOPS+1
      JACK(TOPS)=-IPREV    
C                                      ! LINK TO PREVIUS BLOCK
      JILL(TOPS)= IPREV+1
C                                      ! LINK TO FORM
      IF(APLYFL)GOTO 1713
C                                      ! DON'T EVALUATE ARGS IF
C                                      ! SUBR CALLED BY APPLY
C      CALL APUSH(L) INLINE
C      JP=JP-1
C      IF(IP .GE. JP) GO TO 2
C      STACK(JP)=L
C                                      ! WE SAVE L (THATS THE SUBR)
C                                      ! ON THE STACK OTHERVISE
C                                      ! IT IS HARD TO KNOW WHAT SUBR
C                                      ! WE HAD WHEN WE HAVE EVALUATED
C                                      ! THE ARGS TO THE SUBR
C           EVAL ARGS TO SUBR
C           =================
C           WHEN WE ARRIVE HERE THE TOP BLOCK MAY LOOK LIKE THIS.
C           THE GLOBAL VARIABLE TOPS POINTS TO THE TOPBLOCK.
C           THE POINTER IN JILL(TOPS) POINTS TO ARGUMENT UNDER
C           EVALUATION.
C
C           I--  LINK,,LINK -------------  <---  TOPS
C           I    -*-  FOO               I
C           I    -*-  BAR               I
C           I   *FORM (CONS FOO BAR)  <-I
C           I
C           I->  LINK,,LINK
C
1697  JILL(TOPS)=JILL(TOPS)+1
      IF(JILL(TOPS).EQ.TOPS)GOTO 1712
C                                      ! WE HAVE EVALUATED ALL ARGS
      ARG=JILL(JILL(TOPS))
      IP=IP+1
      STACK(IP)=8
C                                      !  CALL FPUSH(8)
      GOTO 1600
C R-8
1710  IF41=JILL(TOPS)
      JILL(IF41)=IRES
      GOTO 1697
C
1712  CONTINUE
C     OK WE ARE READY NOW WE MUST
C     1. COMPUTE INDEX TO FIRST ARG
C     2. RESTORE FORM
C     3. RESTORE FUNCTION (=L)
C     4. FIX LINK TO PREVIUS BLOCK
C     5. COMPUTE NUMBER OF ARGS
      INDEX=-JACK(TOPS)
C                                      ! THATS TO PREVIUS BLOCK SO WE MUST
C                                      ! ADD 2 TO GET THE REAL INDEX
C                                      ! BUT WE CAN USE THIS INDEX FIRST
      IF41=INDEX+1
      FORM=JILL(IF41)
      L=JACK(IF41)
      JACK(IF41)=SFORM
C
C      CALL APOP(L) INLINE
C      IF (JP .GT. NSTACK) GO TO 2
C      L=STACK(JP)
C      JP=JP+1
C
      JILL(TOPS)=INDEX
      JACK(TOPS)=0
C                                      ! JACK = 0 SHOWS THIS BLOCK
C                                      ! HAS NO VARIABLES
C
      INDEX=INDEX+2
      IARGS=TOPS-INDEX
      GOTO 2800
C                                      ! 2800 THE DISPATCH FOR SUBRS
C
C     SUBR CALLED FROM APPLY
C
C     WE DO THE SAME THING BUT WE DONT HAVE TO
C     RESTORE FORM OR FUNCTION
C
1713  INDEX=-JACK(TOPS)
      JILL(TOPS)=INDEX
      JACK(TOPS)=0
      INDEX=INDEX+2
      IARGS=TOPS-INDEX
      GOTO 2800
C                                      ! 2800 THE DISPATCH FOR SUBRS
C
C
C               APPLYFN2(LL,ARG2)
C               APPLIES A LIST FORM ONTO ARG2
C               LL IS (HOPFULLY) ON FORM (LAMBDA (X Y) .....)
C                                        OR (SUBR . ...)
C               ARG2 IS A LIST OF PARAMETERS
C
1720  IF (NLISTP(LL)) GOTO 2210
C                                      ! 2210=FAULTAPPLY(LL)
      L=CAR(LL)
      IF(L .EQ. LAMBDA) GOTO 1730
      IF(L .EQ. NLAMBD) GOTO 1722
C  (SUBR . X) CASE
      IF(L .EQ. EXPR  ) GOTO 1810
C  (FSUBR . X) CASE
      IF(L .EQ. FEXPR)  GOTO 1815
      IF(L .EQ. FUNARG) GOTO 1818
      GOTO 2210
C
1722  NOEVAL=.TRUE.
      GOTO 1731
1730  NOEVAL=.FALSE.
C
C
C          LAMBDA & NLAMBDA CASE
C          =====================
C
C          1. BOTTOM BLOCK
C
1731  IPREV=TOPS
C                                      ! THIS IS PREVIUS BLOCK
      TOPS=TOPS+1
      JACK(TOPS)=SFORM
      JILL(TOPS)=ARG
C                                      ! PUSH FORM ON STACK
C           2. FIND THE LAMBDALIST
C
C           IF THE FORM IS (FOO FIE FUM (SETQ BAR 77))
C           AND FOO  = (DE FOO (X Y)(CONS X Y))
C           THEN LL  = (LAMBDA (X Y)(CONS X Y))
C           AND ARG2 = (FIE FUM (SETQ BAR 77))
C
1750  ICDR=CDR(LL)
      ICAR=CAR(ICDR)
C                                      ! ICAR IS THEN (X Y)
1760  IF(NLISTP(ICAR))GOTO 1770
C                                      ! THERE WERE NO LAMBDALIST
C                                      ! OR IT IS EXAUSTED
      TOPS=TOPS+1
      JACK(TOPS)=CAR(ICAR)
      JILL(TOPS)=CAR(ARG2)
      ARG2=CDR(ARG2)
      ICAR=CDR(ICAR)
      GOTO 1760 
C
1770  IF(ICAR.NE.NIL) GOTO 1789
C                                      ! WE HAVE A LAMBDA LIST ON FORMAT
C                                      ! (X Y . Z), HALFSPREAD OR L, NOSPREAD
C
C          WE ARE ABOUT TO PUT THE TOPBLOCK
C          BUT MAYBE ARE THERE EXTRA ARGUMENTS TO THE FUNCTION
C
1771  IF (NLISTP(ARG2)) GOTO 1772
C                                      ! THERE WERE NO EXTRA ARGS
C          SOMEONE HAS CALLED A LAMBDA WITH MORE ARGUMENTS
C          THAN DEFINED IN LAMBDALIST.
C          WE PUT THE EXTRA ARGS ABOVE THE "REAL" ONES.
C          THESE ARGS ALL GET THE NAME -*-
C
      TOPS=TOPS+1
      JACK(TOPS)=SUBARG
      JILL(TOPS)=CAR(ARG2)
      ARG2=CDR(ARG2)
      GOTO 1771
C
C             NOW WE CAN PUT THE TOP BLOCK
C
1772  TOPS=TOPS+1
      JACK(TOPS)=-IPREV
C                                      ! TO PREVIUS BLOCK
      JILL(TOPS)=IPREV+1
C                                      ! TO FORM
      IF(NOEVAL.OR.APLYFL)GOTO 1785
C                                      ! IT WAS A NLAMBDA
C                                      ! OR FUNCTION CALLED BY APPLY
C
C
C              EVALUATE ALL ARGS
C              =================
C
C              WHEN WE ARRIVE HERE THE TOP BLOCK MAY LOOK LIKE THIS.
C              THE GLOBAL VARIABLE TOPS POINTS TO THE TOPBLOCK
C
C              I--  LINK,,LINK -------------------------  <---  TOPS
C              I    -*- (SETQ BAR 77)                   I
C              I     Y  FUM                             I
C              I     X  FIE                             I
C              I   *FORM (FOO FIE FUM (SETQ BAR 77))  <-I
C              I
C              I->  LINK,,LINK
C
1777  JILL(TOPS)=JILL(TOPS)+1
      IF (JILL(TOPS).EQ.TOPS) GOTO 1785
      IF41=JILL(TOPS)
      ARG=JILL(IF41)
      IP=IP+1
      STACK(IP)=25
C                                         !  CALL FPUSH(25)
      GOTO 1600
C R-25
1778  IF41=JILL(TOPS)
      JILL(IF41)=IRES
      GOTO 1777
C
C
C          WE HAVE EVALUATED ALL ARGS
C          ==========================
C
C          WE MUST NOW
C          FIX LINK TO PREVIUS BLOCK
C          SAVE THE OLD ENVIRONMENT
C          MAKE THIS THE NEW ENVIRONMENT
C          RESTORE FORM AND FUNCTION
C
1785  INDEX=-JACK(TOPS)
      JILL(TOPS)=INDEX
      JACK(TOPS)=-ENV
      ENV=TOPS
      FORM=JILL(INDEX+1)
      L=CAR(FORM)
1776  IF(NLISTP(L)) GOTO 1786
      LL=L
      TEMP1=CAR(L)
      IF(TEMP1.NE.FUNARG) GOTO 1788
      TEMP1=CDR(L)
      L=CAR(TEMP1)
      GOTO 1776
C THE FOLLOWING CODE IS FOR AVOIDING CALLS TO GET
1786  LL=CDR(L)
C ASSUME THAT THERE IS ALWAYS A PROPERTY LIST
      IF(CAR(LL).NE.FNCELL)GOTO 1787
      LL=CAR(CDR(LL))
      GOTO 1788
1787  LL=GET(L,FNCELL)
1788  ARG=CDR(LL)
      ARG=CDR(ARG)
C
C           NOW ITS TIME TO CALL EVLAST WITH THE FUNCTION BODY
C           AND WHEN WE RETURN FROM THERE GOTO 997 TO POP ENVIRONMENT.
C           THIS WE COULD HAVE DONE WITH
C           CALL FPUSH(?)
C           GOTO 2600
C  R- ?
CXXXX       GOTO 997
C
C      BUT AS FPUSH(6) RETURNS TO 997 WE SAVE ONE RECURSION BY
C
       CALL FPUSH(6)
       GOTO 2600
C
C     HALF AND NOSPREAD ARGS
C     ======================
C
1789  TOPS=TOPS+1
      JACK(TOPS)=ICAR
      JILL(TOPS)=ARG2
C                                         ! PUT THE LAST ARG (HALFSPREAD)
C                                         ! OR THE ONLY ARG (NOSPREAD)
      TOPS=TOPS+1
      JACK(TOPS)=-IPREV
      JILL(TOPS)=IPREV+1
      IF(NOEVAL.OR.APLYFL) GOTO 1785
1790  JILL(TOPS)=JILL(TOPS)+1
      IF (JILL(TOPS).EQ.TOPS-1) GOTO 1797 
C                                         ! LAST ARGUMENT
      IF41=JILL(TOPS)
      ARG=JILL(IF41)
      IP=IP+1
      STACK(IP)=24
C                                         ! CALL FPUSH(24)
      GOTO 1600
C --R24
1795  IF41=JILL(TOPS)
      JILL(IF41)=IRES
      GOTO 1790
C
1797  ARG=JILL(TOPS-1)
      CALL FPUSH(26)
      GOTO 2000
C                                          ! CALL EVLIS WITH LAST OR
C                                          ! THE ONLY ARG
C R--26
1799  JILL(TOPS-1)=IRES
      GOTO 1785
C
C
C
C
C          (SUBR . ATOM)
1810  L=CDR(LL)
      IF(L .GT. SUBR) GOTO 2210
C                                         ! 2210=FAULTAPPLY(LL)
      IF (L.EQ.NIL) GOTO 2230
      GOTO 1680
C          (FSUBR . ATOM)
1815  L=CDR(LL)
      IF(L .GT. FSUBR) GOTO 2210
      IF(L .LE. SUBR) GOTO 2210
      GOTO 18000
C                                          ! 18000=MATCH ROUTINE FOR FSUBRS.
C
C
C               FUNARG
C              THIS CODE MUST BE REWRITEN IT WORKS BUT !!
1818  CONTINUE
      TEMP1=CDR(LL) 
      IF(NLISTP(TEMP1))TEMP1=NIL
      L=CAR(TEMP1)
      IF(NLISTP(TEMP1))TEMP1=NIL
      TEMP1=CDR(TEMP1)
      TEMP2=CAR(TEMP1)
1820  CONTINUE
      IPREV=TOPS
      TOPS=TOPS+1
      JACK(TOPS)=SFORM
c      JILL(TOPS)=TEMP1 !! THIS LINE CHANGED TO BELOW LINE, 20 OCTOBER 84
      JILL(TOPS)=LL
1821  TEMP3=CAR(TEMP2)
      IF(NLISTP(TEMP3)) GOTO 1822
      TOPS=TOPS+1
      TEMP2=CDR(TEMP2)
      JACK(TOPS)=CAR(TEMP3)
      JILL(TOPS)=CDR(TEMP3)
      GOTO 1821
1822  TOPS=TOPS+1
      JACK(TOPS)=-ENV
      JILL(TOPS)=IPREV
      ENV=TOPS
      APLYFL=.FALSE.
      CALL FPUSH(9)
      GOTO 1671
C
C--R9   
C
1830  K=JILL(TOPS)+1
      TEMP1=JILL(K)
      IF(NLISTP(TEMP1))GOTO 2250
      TEMP1=CDR(TEMP1)
      IF(NLISTP(TEMP1))GOTO 2250
      TEMP1=CDR(TEMP1)
      IF(NLISTP(TEMP1))GOTO 2250
      TEMP1=CAR(TEMP1)
      K1=K

1832  K1=K1+1
      IF(K1.GE.TOPS)GOTO 997
      IF(NLISTP(TEMP1))GOTO 2250
      TEMP2=CAR(TEMP1)
      IF(NLISTP(TEMP2))GOTO 2250
      IF(CAR(TEMP2).NE.JACK(K1)) GOTO 2250
C*SETC*      CALL SETCDR(TEMP2,JILL(K1))
      CDR(TEMP2)=JILL(K1)
      TEMP1=CDR(TEMP1)
      GOTO 1832

C
C
C
C             RECURSIVE FUNCTION EVLIS(ARG)
C-----------------------------------------------------------------------
C
2000  IF (NLISTP(ARG)) GOTO 999
      JP=JP-2
      STACK(JP+1)=NIL
      STACK(JP)=ARG
C                                        ! CALL APUSH2(NIL,ARG)
2010  ARG=CAR(ARG)
      IP=IP+1
      STACK(IP)=2
C                                        ! CALL FPUSH(2)
      GOTO 1600
C
C--R2         RETURN FROM EVAL(ARG)
C
2020  TEMP1=STACK(JP+1)
      STACK(JP+1)=CONS(IRES,TEMP1)
      ICDR=STACK(JP)
      ARG=CDR(ICDR)
      IF (NLISTP(ARG)) GOTO 2030
      STACK(JP)=ARG
      GOTO 2010
2030  IRES=STACK(JP+1)
      JP=JP+2
C       DREVERSE IRES BEFORE RETURN.
      TEMP1=NIL
2040  TEMP2=CDR(IRES)
C*SETC*      CALL SETCDR(IRES,TEMP1)
       CDR(IRES)=TEMP1 
      IF(TEMP2 .EQ. NIL) GOTO 999
      TEMP1=IRES
      IRES=TEMP2
      GOTO 2040
C
C
C-----------------------------------------------------------------------
C             RECURSIVE FUNCTION EVCON
C
2100  JP=JP-1
2110  STACK(JP)=ARG
      IF (NLISTP(ARG)) GOTO 2140
      ICAR=CAR(ARG)
      IF (NLISTP(ICAR)) GOTO 25080
      ARG=CAR(ICAR)
      IP=IP+1
      STACK(IP)=4
      GOTO 1600
C
C--R4         RETURN FROM EVAL(ARG)
C
2120  IF(IRES .NE. NIL) GOTO 2130
      ICDR=STACK(JP)
      ARG=CDR(ICDR)
      GOTO 2110
2130  ICAR=STACK(JP)
      ICAR=CAR(ICAR)
      ICAR=CDR(ICAR)
      JP=JP+1
      IF(ICAR .EQ. NIL) GOTO 999 
      ARG=ICAR
      GOTO 2600
2140  JP=JP+1
      IRES=NIL
      GOTO 999
C
C
C
C               FAULTEVAL AND FAULTAPPLY AS CALLED FROM EVAL-APPLY.
C               ---------------------------------------------------
C
2200  L=EVAL
      ERRTYP=1
      FORM=ARG
      GOTO 2400
C
2210  ARG=LL
      ERRTYP = 2
2220  L=APPLY
      GOTO 2400
C
2230  ARG=L
      ERRTYP=2
      GOTO 2220
C
2240  ERRTYP=26
      ARG=ARG2
      GOTO 2400
C
C  FAULTY FUNARG BLOCK
C
2250  ERRTYP=31
      FORM=JILL(JILL(TOPS)+1)
      L=CAR(FORM)
      ARG=NIL
      GOTO 2400

C
C       SYSERROR(ERRTYP,L,ARG,FORM)
C       ---------------------------
C       THIS ENTRY IS USED FOR ALL WEAK ERRORS IN THE SYSTEM.
C       WHEN CALLED, ERRTYP=TYPE OF ERROR, L=FAILING FUNCTION,
C         ARG=ERRONEOUS FORM, FORM=FORM BEING EVALUATED.
C       HERE THE LISP-DEFINED FUNCTION SYSERROR IS CALLED.
2400  ARG2=CONS(FORM,NIL)
      ARG2=CONS(ARG,ARG2)
      ARG2=CONS(L,ARG2)
      ARG2=CONS(ERRTYP+NUMADD,ARG2)
      ARG=ERROR
      IBREAK=.FALSE.
      LMARG=1
      GOTO 1500
C       CALL APPLY(SYSERROR, (ERRTYP L ARG FORM))
C
C
C
C
C             RECURSIVE FUNCTION EVLAST(ARG)
C-----------------------------------------------------------------------
C
C   ON ENTRY HERE ARG HOLDS A LIST OF FORMS THAT SHOULD BE EVALUATED
C   (SETQ FOO 77)(...) (....)
C   THE LIST IS KEEPT ON TOP OF STACK AND CAR OF IT IS SENT TO EVAL
C   WHEN ONLY ONE FORM IS LEFT THIS FORM IS GIVEN TO EVAL BUT BEFORE
C   THE TOP OF STACK IS CLEARED AND EVAL IS CALLED NONRECURCIVLY
C
2600  IF (NLISTP(ARG)) GOTO 999
      JP=JP-1
      STACK(JP)=ARG
      TEMP1=ARG
2610  ARG=CAR(TEMP1)
      I = CDR(TEMP1)
      IF (NLISTP(I)) GOTO 2630
      IP=IP+1
      STACK(IP)=3
      GOTO 1600
C
C--R3         RETURN FROM EVAL(ARG)
C
2620  ICAR=STACK(JP)
      TEMP1=CDR(ICAR)
      STACK(JP)=TEMP1
      GOTO 2610
2630  JP=JP+1
      GOTO 1600
C
C             MAIN DISPATCH
C             =============
C
C             AT ENTRY , L=THE FUNCTION, IARGS=NR OF ARGS IN
C             JILL ,STARTING AT INDEX
C
C
2800  IF (L.LE.SUBR0) GOTO 3000
      IF (L.LE.SUBR1) GOTO 3020
      IF (L.LE.SUBR2) GOTO 3140
      IF (L-SUBR3) 3200,3200,3290
C-----------------------------------------------------------------------
C SUBR0  ENTRY
C
3000  GOTO( 3090,10075,
     *     10080,10130,10050,10060,10070, 1010,10090,10100,10000,
     *     10105,1    ,10110 ,10120),L
C          NIL    BTV*  
C          CLOCK DATE  EJECT EXIT GENSY LISPX RATOM READ  READC
C          READP  RESET TERPRI TIME
C-----------------------------------------------------------------------
C SUBR1  ENTRY
C
3020  ARG=NIL
      IF (IARGS.EQ.0) GOTO 3050
3040  ARG=JILL(INDEX)
C
C SUBR1 JUMP ENTRY
C
3050  IF (L.LE.SUBR11) GOTO 3070
       LL=L-SUBR11
C             JUMP TO SUBR1 (AND DO NOT TEST ON NUM ARG)
      GOTO (10040,11190,11197,11200,
     *     11210,11210,11210,11210,11210,11210,11210,11210,11210,
     *     11210,11210,11210,11210,11210,11215,11220,11225,11227,11230,
     *     11255,11260,11290,11205,11310,11320,11330,11340,
     *     998,11355,20150,11360,11415,11420),LL
C          ALIST ARRAYSIZE ARRAYP ATOM
C          CAR   CDR   CAAR  CADR  CDAR  CDDR  CAAAR CAADR CADAR
C          CADDR CDAAR CDADR CDDAR CDDDR EVAL EVLIS FIXP FLOATP GETD
C          LAST,LENGTH LISTP LITAT NLISTP NULL  NUMBE OBLIS
C          PROG1 PROMP RETUR REVER STRINGP ZEROP
C
C SUBR1  TEST ON NUMERICAL ARG
C
3070  IF (ARG.LE.BIGNUM) GOTO 25000
      N = ARG-NUMADD
      LL=L-SUBR0
      GOTO(11000,11010,11020,11050,11060,11070,11080),LL
C          ADD1 ERRMS RECLA ROLLI ROLLO SUB1 REWIND
C
C RETURN CHANNELS (CAN BE USED BY ALL SUBR'S AND FSUBR'S EXCEPT SUBRN'S)
C
C TEMP1
C
3080  IRES = TEMP1
      GOTO 998
C
C PREDICATES
C
3090  IRES=NIL
      GOTO 998
3100  IRES=T
      GOTO 998
C
C NUMERICAL VALUED FUNCTIONS
C
3105  CONTINUE
3110  IF(IRFLAG.NE.NIL) GOTO 3120
      IF (GREAT(N)) GOTO 3130
      IRES = N+NUMADD
      GOTO 998
3120  IRES = MKREAL(R)
      GOTO 998
3130  IRES=MKNUM(N)
      GOTO 998
C-----------------------------------------------------------------------
C SUBR2  ENTRY
C
3140  ARG2=NIL
      ARG=NIL
      IF41=IARGS+1
      GOTO (3190,3180,3170), IF41
3170  ARG2=JILL(INDEX+1)
3180  ARG=JILL(INDEX)
C
C SUBR 2 JUMP ENTRY
C
3190  LL=L-SUBR1
      GOTO  (12000,12040,12050,1477 ,12715,12720,12090,12100,12112,
     * 12114,
     * 12116,12120,12130,12140,12160,12190,12200,12730,12205,12210,
     * 12350,12390,12430,12470,12500,12510,12515,12520,12540,12570,
     * 12600,
     * 12620,12655,12660,12690,12746,12750,12780), LL
C            ADDLI ALPHO APPEN APPLY ASSOC   CHTAB CONS  DIFFE ELT
C      ELTI
C      ELTR  EQ    EQUAL EVALA EVSTK GETP  GREAT IOTAB IQUOR LESSP
C      MEMB  MEMBE NCHAR NCONC NCONC1 NEQ  NTH   PACK  QUOTI RPLACA 
C      RPLACD
C      RPT   SASSOC SET   STRAL TAILP UNPAC XCALL
C-----------------------------------------------------------------------
C SUBR3  ENTRY
C
3200  ARG=NIL
      ARG2=NIL
      ARG3=NIL
      IF41 = IARGS + 1
      GOTO (3280,3209,3207,3205), IF41
3205  ARG3=JILL(INDEX+2)
3207  ARG2=JILL(INDEX+1)
3209  ARG =JILL(INDEX)
C
C SUBR3  JUMP ENTRY
C
3280  LL=L-SUBR2
      GOTO  (15000,15012,15015,12330,12220,12310,12340 ,12345,15020,
     *15040, 15130,15142,15144,15146,15150,15160,15190), LL
C            APPLYA APPLYS ARRAY MAP  MAPC  MAPCA MAPLI OPEN0 PRIN0 
C     PUT    RPLST SETA  SETI  SETR SUBPAIR SUBSTR SYSERROR
C-----------------------------------------------------------------------
C SUBRN  ENTRY
C
C             IT IS HERE UP TO THE SUBRN TO TAKE CARE OF THE ARGS
C
3290  LL=L-SUBR3
      GOTO (16000,16010,16040,16070,16080), LL
C          CONCAT LIST  PLUS SYSFLA TIMES
C
C RETURN CHANNELS (3105 ALSO)
3300  CONTINUE
      IF(IFLG2-NIL) 16005,998,16005
C-----------------------------------------------------------------------
C             SUBR 0
C-----------------------------------------------------------------------
C
C READC
C
10010 CALL SHIFT(2)
10000 IF (CHT.LE.0) GOTO 10010
      IF (CHT.LT.13 .OR. CHT.GE.23) GOTO 10020
      IRES=CHT-13+NUMADD
      GOTO 10030
10020 ABUFF(1) = CHR
      IRES=MATOM(1)
10030 CALL SHIFT(2)
      GOTO 998
C
C ALIST
C
10040 LOCAL=ENV
      FORMFL = ARG.NE.NIL
      TEMP1=CONS(NIL,NIL)
      TEMP2=TEMP1
      IF (LOCAL.LE.0)GOTO 10044
      GOTO 10042
10041 IF(.NOT.FORMFL) GOTO 10037
      IF(JACK(K).NE.SFORM)GOTO 10037
C*SETC*      CALL SETCDR(TEMP1,CONS(CONS(JACK(K),JILL(K)),NIL))
       CDR(TEMP1)=CONS(CONS(JACK(K),JILL(K)),NIL) 
      TEMP1=CDR(TEMP1)
10037 LOCAL=-JACK(LOCAL)
      IF(LOCAL.LE.0)GOTO 10044
10042 LOCALE=JILL(LOCAL)+2
      K=LOCAL
10043 K=K-1
      IF (K.LE.0) GOTO 10044
      IF (K.LT.LOCALE) GOTO 10041
C*SETC*      CALL SETCDR(TEMP1,CONS( CONS(JACK(K),JILL(K)),NIL))
       CDR(TEMP1)=CONS( CONS(JACK(K),JILL(K)),NIL) 
      TEMP1=CDR(TEMP1)
      GOTO 10043
10044 IRES=CDR(TEMP2)
      GOTO 998
C
C EJECT
C
10050 CALL EJECT(LUNUT)
      GOTO 3090
C
C EXIT
C
10060 CALL LSPEX
C
C GENSYM
C
10070 ARG=CONS(A000,CONS(MKNUM(NUMGEN),NIL))
      NUMGEN=NUMGEN+1
      ARG2=NIL
      GOTO 12520
C             TO PACK
C
C BTV*
10075 CALL SHOSTK(1)
      IRES=NIL
      GOTO 998
C
C CLOCK
C
10080 IRES=MKNUM(MSLFT(I))
      GOTO 998
C
C RATOM
C
10090 BRFLG = NIL
      I = RATOM(IRES,0)
      GOTO 998
C
C READ
C
10100 IRES=IREAD(0)
      GOTO 998
C
C READP
10105 IF(CHT.GT.1) GOTO 3100
      IF(RDPOS.GT.MARGR) GOTO 3090
      CALL SHIFT (2)
      GOTO 10105
C
C RESET = GOTO 1
C
C
C TERPRI
C
10110 CALL TERPRI
      PRTPOS=LMARG
      GOTO 3090
C
C TIME
10120  CALL MTIME(BUFF)
C                            CHANGE 5 IF YOUR TIME FORMAT IS NOT 5 LONG
       DO 10125 I=1,5
       CALL GETCH(BUFF,TEMP1,I)
       ABUFF(I)=TEMP1
10125  CONTINUE
C                    THE TWO 5'S BELOW MUST ALSO BE CHANGED
       ABUP1= 5
       IRES=MATOM(-5)
       GOTO 998
C
C DATE 
10130  CALL MDATE(BUFF)
C              YOU CAN CHANGE THE 10 IN THE DO STATEMENT BELOW IF YOU
C              HAVE A DATE FORMAT THAT IS NOT 10 CHARACTERS LONG
       DO 10135 I=1,8
       CALL GETCH(BUFF,TEMP1,I)
       ABUFF(I)=TEMP1
10135  CONTINUE
C              THE TWO OCCURENCES OF 10 BELOW MUST ALSO BE CHANGED
       ABUP1= 8
       IRES=MATOM(-8)
       GOTO 998
C-----------------------------------------------------------------------
C        SUBR 1 (WITH NUMERICAL ARG IN N)
C-----------------------------------------------------------------------
C
C ADD1
C
11000 N=N+1
      IRFLAG = NIL
      GOTO 3110
C
C ERRORMESS
C
11010 IF (N.LT.1 .OR. N.GT.MAXMES) GOTO 25000
      CALL MESS(N)
         GOTO 998
C
C RECLAIM
C
11020 DO 11030 I = 1,NARGS
            IF (I.EQ.4) GOTO 11030
            IF (I.NE.5) ARGS(I) = NIL
11030       CONTINUE
      IF (N.LT.0 .OR. N.GT.3) GOTO 25000
      IRES = MKNUM(GARB(N))
      GOTO 998
C
C ROLLIN
C
11050 IF (N.LT.1 .OR. N.GT.MAXLUN) GOTO 25000
      IRES = ROLLIN(N)
      IF(IRES .EQ. NIL) GOTO 998
      GOTO 1
C
C ROLLOUT
C
11060 IF (N.LT.1 .OR. N.GT.MAXLUN) GOTO 25000
      CALL ROLLOU(N)
      GOTO 998
C
C SUB1
C
11070 N=N-1
      IRFLAG = NIL
      GOTO 3110
C
C REWIND
C
11080 IF (N.LT.1 .OR. N.GT.MAXLUN) GOTO 25000
      CALL REW(N)
      GOTO 998
C-----------------------------------------------------------------------
C       SUBR 1 (OTHERS)
C-----------------------------------------------------------------------
C ALIST 10040
C
C ARRAYSIZE
C
11190 DO 11195 I = 1,3
11195 CALL ARRUTL(ARG,3,I,J,ARGS(I+5))
      IF (IBREAK) GOTO 2400
      IRES = CONS(MKNUM(TEMP1+TEMP2+TEMP3),
     *  CONS(MKNUM(TEMP2),CONS(MKNUM(TEMP3),NIL)))
      GOTO 998
C ARRAYP
11197 IF (ARG.GT.NATOM) GOTO 3090
      IF (CAR(ARG).EQ.ARRAY) GOTO 998
      GOTO 3090
C
C ATOM
C
11200 IF (ARG.GT.NFREET) GOTO 3100
11205 IF (ARG.GT.NATOM) GOTO 3090
      IF (SPECAT(CAR(ARG))) GOTO 3090
      GOTO 3100
C
C C...R
C
C      THE CODE BELOW MUST BE CHANGED IF CAR NO LONGER IS THE
C      FIFT NON-NUMERIC SUBR1.
C
11210 LL = LL-3
11211 IF (ARG.GT.NFREET) GOTO 25000
      I = MOD(LL,2)
      IF (I.EQ.0)  IRES = CAR(ARG)
      IF (I.NE.0)  IRES = CDR(ARG)
      LL = LL/2
      IF (LL-1) 998,998,11211
C
C EVAL
11215   IP=IP+1
        STACK(IP)=19
        GOTO 1600
C
C EVLIS
C
11220 IP=IP+1
      STACK(IP)=19
      GOTO 2000
C
C FIXP
11225 IF(ARG.LE.NFREET) GOTO 3090
      IF(ARG.GT.BIGNUM) GOTO 998
      GOTO 3090
C
C FLOATP
11227 IF(ARG.LE.NFREET) GOTO 3090
      IF(ARG.LE.BIGNUM) GOTO 998
      GOTO 3090
C
C GETD
C
11230 K=GET(ARG,FNCELL)
      IF(K .EQ. NIL) GOTO 11240
      IRES=K
      GOTO 998
11240 IF(ARG .GT. FSUBR) GOTO 3090
      IF(ARG .EQ. NIL) GOTO 3090
      IF(ARG .GT. SUBR) GOTO 11250
      IRES=CONS(EXPR,ARG)
      GOTO 998
11250 IRES=CONS(FEXPR,ARG)
      GOTO 998
C
C LAST
11255 IF(NLISTP(ARG))GOTO 998
11256 TEMP1=CDR(ARG)
      IF(NLISTP(TEMP1)) GOTO 998
      ARG=CDR(ARG)
      GOTO 11256
C
C LENGTH
C
11260 K = 0
11270 IF (NLISTP(ARG)) GOTO 11280
      K=K+1
      ARG=CDR(ARG)
      GOTO 11270
11280 IRES = MKNUM(K)
      GOTO 998
C
C LISTP
C
11290 IF (NLISTP(ARG)) GOTO 3090
      GOTO 998
C
C LITATOM = 11205
C
C NLISTP
C
11310 IF (NLISTP(ARG)) GOTO 3100
      GOTO 3090
C
C NULL
C
11320 IF(ARG.EQ.NIL)GOTO 3100
      GOTO 3090
C
C NUMBERP
C
11330 IF(ARG.LE.NFREET) GOTO 3090
      GOTO 998
C
C OBLIST
C
11340 MIN=ARG
      IRES=NIL
      DO 11350 I=MIN,NATOMP
      IF (.NOT.SPECAT(CAR(I))) IRES = CONS(I,IRES)
11350 CONTINUE
      GOTO 998
C
C                                           !  PROMPT SHOULD BE A COMMON
C PROMPTTEXT (STRING) = OLD STRING          !   BLOCK CONTAINING
C                                           !    CURRENT PROMPT CH
11355 IF(ARG.GT.NATOM) GOTO 3090
      II=ARG
      DO 11356 I=1,PROLEN
11356 ABUFF(I)=PROTXT(I)
      IRES=MATOM(PROLEN)
      IF (II.EQ.NIL)GOTO 998
      I= GETPN(II,MAIN,JB,PROLEN)
      IF(PROLEN.GT.80)PROLEN=80
      DO 11357 I=1,PROLEN
11357 CALL GETCH(PNAME,PROTXT(I),JB+I-1)
      GOTO 998
C
C PROG1 = GOTO 998
C RETURN = 20150
C
C REVERSE
C
11360 IRET=1
C          SEQUENCE USED ALSO BY APPEND
11370 IF (NLISTP(ARG)) GOTO 11410
      TEMP1=NIL
11390 ICAR=CAR(ARG)
      TEMP1=CONS(ICAR,TEMP1)
      ARG=CDR(ARG)
      IF (.NOT.NLISTP(ARG)) GOTO 11390
11400 IRES=TEMP1
C            RETURN LIST
      GOTO(998,12070),IRET
C             RETURN ATOM
11410 GOTO(998,12060),IRET
C
11415 CONTINUE 
      IF (ARG.GT.NATOM) GOTO 3090
      IF (CAR (ARG).EQ.STRING) GOTO 998
      IF (CAR (ARG).EQ.SUBSTR) GOTO 998
      GOTO 3090
C ZEROP
C
11420 IF (ARG.EQ.NUMADD)GOTO 3100
      GOTO 3090
C-----------------------------------------------------------------------
C             SUBR 2
C-----------------------------------------------------------------------
C
C ADDLIST
C
12000 I=ARG2
12010 IF (NLISTP(I)) GOTO 12020
      IF(ARG .EQ. CAR(I)) GOTO 12030
      I=CDR(I)
      GOTO 12010
12020 IRES=CONS(ARG,ARG2)
      GOTO 998
12030 IRES=ARG2
      GOTO 998
C
C ALPHORDER
C
C** CHANGED BY TR TO BE EQUIVALENT WITH INTERLISP
12040 IF(ARG .LE. NFREET .OR. ARG2 .LE. NFREET) GOTO 12041
      R=GTREAL(ARG,I)
      S=GTREAL(ARG2,J)
      IF(R.EQ.0.)R=FLOAT(I)
      IF(S.EQ.0.)S=FLOAT(J)
      IF(R-S) 3100,3100,3090
12041 IF (ARG .GT. NFREET) GOTO 3100
      IF (ARG2 .GT. NFREET) GOTO 3090
      IF(ARG .GT. NATOM) GOTO 3100
C            HERE ARG = LITERAL ATOM
      IF(ARG2 .GT. NATOM) GOTO 3100
C            HERE ALSO ARG2 = LITERAL ATOM
      IF (COMPPN(ARG,ARG2)) 3100,3100,3090
C
C APPEND
C
12050 IRET=2
      GOTO 11370
C             TO REVERSE
12060 IRES=ARG2
C             ATOM RETURNED
      GOTO 998
12070 I=CDR(ARG)
C             LIST RETURNED
C*SETC*      CALL SETCDR(ARG,ARG2)
       CDR(ARG)=ARG2 
      IF (I.EQ.NIL) GOTO 998
      ARG2=ARG
      ARG=I
      GOTO 12070
C
C
C CONS
C
12090 IRES=CONS(ARG,ARG2)
      GOTO 998
C
C DIFFERENCE
C
12100 IF (ARG.LE.NFREET) GOTO 25020
      IF (ARG2.LE.NFREET) GOTO 25010
      IRFLAG = NIL
      R = GTREAL(ARG,I)
      S = GTREAL(ARG2,J)
      IF (R.NE.0..OR.S.NE.0.) GOTO 12105
      N = I-J
      GOTO 3110
12105 IRFLAG = T
      IF (R.EQ.0.) R = FLOAT(I)
      IF (S.EQ.0.) S = FLOAT(J)
      R = R-S
      GOTO 3110
C
C ELT
C
12112 IF (ARG2.LE.NFREET) GOTO 25010
      CALL ARRUTL(ARG,1,1,GETNUM(ARG2),TEMP1)
      IF (IBREAK) GOTO 2400
      IRES = JPNAME(TEMP1)
      GOTO 998
C
C ELTI
C
12114 IF (ARG2.LE.NFREET) GOTO 25010
      CALL ARRUTL(ARG,1,2,GETNUM(ARG2),TEMP1)
      IF (IBREAK) GOTO 2400
      IRES = MKNUM(IPNAME(TEMP1))
      GOTO 998
C
C ELTR
C
12116 IF (ARG2.LE.NFREET) GOTO 25010
      CALL ARRUTL(ARG,1,3,GETNUM(ARG2),TEMP1)
      IF (IBREAK) GOTO 2400
      IRES = MKREAL(PNAME(TEMP1))
      GOTO 998
C
C EQ
C
12120 IF(ARG-ARG2) 3090, 3100, 3090
C
C EQUAL
C
12130 IRES=EQUAL(ARG,ARG2)
      GOTO 998
C
C EVALA
C
12140 IPREV=TOPS
      TOPS=TOPS+1
      JACK(TOPS)=SFORM
      JILL(TOPS)=ARG2
12141 TEMP1=CAR(ARG2)
      IF(NLISTP(TEMP1)) GOTO 12142
      IF(TOPS.GT.HILL-60)GOTO 12141
      TOPS=TOPS+1
      ARG2=CDR(ARG2)
      JACK(TOPS)=CAR(TEMP1)
      JILL(TOPS)=CDR(TEMP1)
      GOTO 12141
12142 TOPS=TOPS+1
      JACK(TOPS)=0
      JILL(TOPS)=IPREV
      CALL APUSH(ENV)
      ENV=TOPS
      CALL FPUSH(20)
      GOTO 1600
C--R20        RETURN FROM EVAL(ARG)
12150 CALL APOP(ENV)
      TOPS=JILL(TOPS)
      GOTO 998
C
C EVSTK
12160 IPREV=TOPS
      TEMP1=GETNUM(ARG2)
      IF (ILLENV(TEMP1)) GOTO 25035
      TOPS=TOPS+1
      JACK(TOPS)=-TEMP1
      JILL(TOPS)=IPREV
      CALL APUSH(ENV)
      ENV=TOPS
      CALL FPUSH(5)
      GOTO 1600
C R-5
12185 TOPS=JILL(TOPS)
      CALL APOP(ENV)
      GOTO 998
C GETP
C
12190 IRES=GET(ARG,ARG2)
      GOTO 998
C
C GREATERP
C
12200 IF(ARG .LE. NFREET) GOTO 25020
      IF(ARG2 .LE. NFREET) GOTO 25010
      R=GTREAL(ARG,I)
      S=GTREAL(ARG2,J)
      IF(R.EQ.0.) R=FLOAT(I)
      IF(S.EQ.0.) S=FLOAT(J)
      IF(R-S) 3090,3090,3100
C
C IQUOREM
C
12205 IF (ARG.LE.NFREET) GOTO 25020
      IF (ARG2.LE.NFREET) GOTO 25010
      J = GETNUM(ARG2)
      IF (J.EQ.0) GOTO 25010
      IRES = NUPAIR(GETNUM(ARG),J)
      GOTO 998
C
C LESSP
C
12210 IF(ARG .LE. NFREET) GOTO 25020
      IF(ARG2 .LE. NFREET) GOTO 25010
      R=GTREAL(ARG,I)
      S=GTREAL(ARG2,J)
      IF(R.EQ.0.) R=FLOAT(I)
      IF(S.EQ.0.) S=FLOAT(J)
      IF(R-S) 3100,3090,3090
C
C MAPC (ARG, ARG2, ARG3)
C
12220 I=1
12230 JP=JP-1
      STACK(JP)=I
C             SEQUENCE USED ALSO BY MAP, MAPCAR, MAPLIST
12240 JP=JP-3
      IF (NLISTP(ARG)) GOTO 12300
      STACK(JP+2)=ARG2
      STACK(JP+1)=ARG3
      STACK(JP)=ARG
12250 ICAR=ARG
      IF(STACK(JP+3) .EQ. 1 .OR. STACK(JP+3) .EQ. 3) ICAR=CAR(ARG)
      ARG3=STACK(JP+1)
      ARG=STACK(JP+2)
      ARG2=CONS(ICAR,NIL)
      CALL FPUSH(14)
      GOTO 1500
C
C--R14        RETURN FROM APPLY
C
12260 IF(STACK(JP+3) .LT. 3) GOTO 12270
      IST=STACK(JP+4)
C*SETC*      CALL SETCDR(IST,CONS(IRES,NIL))
       CDR(IST)=CONS(IRES,NIL) 
      STACK(JP+4)=CDR(IST)
12270 ARG2=STACK(JP)
      ARG=STACK(JP+1)
      IF(ARG .EQ. NIL) GOTO 12280
C        THIRD ARGUMENT NOT NIL. APPLY STEP FUNCTION
      ARG2=CONS(ARG2,NIL)
      CALL FPUSH(21)
      GOTO 1500
12280    ARG=CDR(ARG2)
C
C--R21        RETURN FROM APPLY(ARG,ARG2)
C
12290 IF (NLISTP(ARG)) GOTO 12300
      STACK(JP)=ARG
      GOTO 12250
12300 JP=JP+4
      IF(STACK(JP-1) .LT. 3) GOTO 3090
      ICAR=STACK(JP)
C*SETC*      CALL SETCDR(ICAR,ARG)
       CDR(ICAR)=ARG 
      ICAR=STACK(JP+1)
      IRES=CDR(ICAR)
      JP=JP+2
      GOTO 998
C
C MAPCAR
C
12310 I=3
12320 JP=JP-3
      STACK(JP+2)=CONS(NIL,NIL)
      STACK(JP+1)=STACK(JP+2)
      STACK(JP)=I
      GOTO 12240
C
C MAP
C
12330 I=2
      GOTO 12230
C
C MAPLIST
C
12340 I=4
      GOTO 12320
C
C OPEN0
C
12345 I= OPENF(CONS(ARG,CONS(ARG2,ARG3)))
      IF(I.GT.0) IRES=MKNUM(I)
      IF(I.LE.0)IRES=NIL
      GOTO 998
C
C
C MEMB
C
12350 I=ARG
      IRES=ARG2
12360 IF (NLISTP(IRES)) GOTO 3090
      IF (I.EQ.CAR(IRES)) GOTO 998
      IRES=CDR(IRES)
      GOTO 12360
C
C MEMBER
C
12390 I=ARG
      IRES=ARG2
12400 IF (NLISTP(IRES)) GOTO 3090
      ICAR=CAR(IRES)
      IF (EQUAL(I,ICAR) .NE. NIL) GOTO 998
      IRES=CDR(IRES)
      GOTO 12400
C
C NCHARS
C
12430 IF(ARG.GT.NATOM) GOTO 12431
      IF(ARG2.EQ.NIL.AND.CAR(ARG).NE.ARRAY) GOTO 12460
12431 IRES = NCHARS(CONS(ARG,NIL),ARG2)
C12440 = RETURN ALSO FROM PACK, UNPACK, PUTINT, CONCAT
12440 CALL APOP(PRTPOS)
      DO 12450 I=1,MARG
12450 PRBUFF(I)=BUFF(I)
      GOTO 998
12460 IF (0.GT.GETPN(ARG,MAIN,JB,IPL)) GOTO 25020
      IRES = MKNUM(IPL)
      GOTO 998
C
C NCONC
C
12470 I = 0
      TEMP1 = ARG
12480 IF (NLISTP(TEMP1)) GOTO 12490
      I = TEMP1
      TEMP1 = CDR(TEMP1)
      GOTO 12480
12490 IF (I.EQ.0) GOTO 12060
C*SETC*      CALL SETCDR(I, ARG2)
       CDR(I)= ARG2 
      GOTO 998
C
C NCONC1
C
12500 ARG2=CONS(ARG2,NIL)
      GOTO 12470
C
C NEQ
C
12510 IF(ARG-ARG2) 3100, 3090, 3100
C
C NTH
12515 IF (ARG2.LE.BIGNUM) GOTO 25020
      IF (ARG2.LE.NUMADD) GOTO 12519
      N=ARG2-1
12516 IF (N.LE.NUMADD) GOTO 998
      IF (NLISTP(ARG))GOTO 998
      ARG=CDR(ARG)
      N=N-1
      GOTO 12516
C     INTERLISP GIVES (CONS NIL ARG) FOR N<=0
12519 IRES=CONS(NIL,ARG)
      GOTO 998
C
C PACK
C
12520 ARG2=NCHARS(ARG,ARG2)-NUMADD
      ARG2 = PRTPOS-1
C                                       SAVE CHT,CHR
C                                      ALSO FROM GETINT
12530 IF (ARG2.GT.0) GOTO 12535
         IRES = MATOM(0)
         GOTO 12440
12535 N1 = CHT
      N2 = CHR
      CHT = 0
      PRTPOS = 1
      IFLG2 = T
      IRES = IREAD(1)
      IFLG2 = NIL
      CHT = N1
      CHR = N2
      GOTO 12440
C
C QUOTIENT
C
12540 IF (ARG.LE.NFREET) GOTO 25020
      IF (ARG2.LE.NFREET) GOTO 25010
      IRFLAG = NIL
      R = GTREAL(ARG,I)
      S = GTREAL(ARG2,J)
      IF (R.NE.0..OR.S.NE.0.) GOTO 12545
      IF(J.EQ.0)GOTO 25010
      N=I/J
      GOTO 3110
12545 IRFLAG = T
      IF (R.EQ.0.) R = FLOAT(I)
      IF (S.EQ.0.) S = FLOAT(J)
      IF (S.EQ.0.) GOTO 25010
      R = R/S
      GOTO 3110
C
C RPLACA
C
12570 IRET=1
12580  CONTINUE 
      IF (ARG.EQ.NIL .OR. ARG.EQ.T) GOTO 25020
      IF(ARG .GT. NFREET) GOTO 25020
      IF (ARG.GT.NATOM) GOTO 12590
      IF (SPECAT(CAR(ARG))) GOTO 25020
C*SETC*12590 CALL SETCAR(ARG, ARG2)
12590  CAR(ARG)= ARG2 
      IF(IRET .EQ. 2) ARG=ARG2
      GOTO 998
C
C RPLACD
C
12600 IF (ARG.EQ.NIL) GOTO 25020
      IF(ARG .GT. NFREET) GOTO 25020
      IF (ARG.GT.NATOM) GOTO 12610
      IF (SPECAT(CAR(ARG))) GOTO 25020
C*SETC*12610 CALL SETCDR(ARG, ARG2)
12610  CDR(ARG)= ARG2 
      GOTO 998
C
C RPT
C
12620 IF (ARG.LE.BIGNUM) GOTO 25020
      CALL APUSH(ARG)
      N=ARG
      ARG=ARG2
      CALL APUSH(ARG2)
12630 IF(N .LE. NUMADD) GOTO 12650
      CALL FPUSH(22)
      GOTO 1600
C
C--R22       RETURN FROM EVAL(ARG)
C
12640 N=STACK(JP+1)-1
      STACK(JP+1)=N
      ARG=STACK(JP)
      GOTO 12630
12650 JP=JP+2
      GOTO 3090
C
C SASSOC
12655 IF (NLISTP(ARG2))GOTO 12659
      TEMP1=CAR(ARG2)
      IF41=CAR(TEMP1)
      IF( EQUAL(ARG,IF41).NE.NIL)GOTO 12658
      ARG2=CDR(ARG2)
      GOTO 12655
12658 IRES=TEMP1
      GOTO 998
12659 IRES=ARG2
      GOTO 998
C
C SET
C
12660 IRET=2
      IF(ARG .GT. NATOM) GOTO 25020
      LOCAL=ENV
      IF (LOCAL.LE.0)GOTO 12580
C                                      ! TO RPLACA
      GOTO 12675
12670 LOCAL=-JACK(LOCAL)
      IF (LOCAL.LE.0) GOTO 12580
12675 LOCALE=JILL(LOCAL)+2
      K=LOCAL
12680 K=K-1
      IF (K.LT.LOCALE) GOTO 12670
      IF (JACK(K).NE.ARG) GOTO 12680
      JILL(K)=ARG2
      IRES=ARG2
      GOTO 998
C STRALLOC
C
12690 IF (ARG.LE.NFREET) GOTO 25020
      I = GETNUM(ARG)
      IF (0.GT.GETPN(ARG2,MAIN,JB,IPL)) GOTO 25010
      IRES = MATOM(-I)
      IF (IRES.EQ.NIL .OR. I.EQ.0) GOTO 998
      CALL GETCH(PNAME,ICH,JB)
      DO 12710 J = 1,I
         CALL PUTCH(PNAME,ICH,JBP)
12710    JBP = JBP+1
      GOTO 998
C
C ASSOC
C
12715 CONTINUE
      IF (NLISTP(ARG2))GOTO 12719
      TEMP1=CAR(ARG2)
      IF (ARG.EQ.CAR(TEMP1)) GOTO 12718
      ARG2=CDR(ARG2)
      GOTO 12715
12718 IRES=TEMP1
      GOTO 998
12719 IRES=ARG2
      GOTO 998
C
C
C CHTAB
C
12720 IF(ARG .GT. NATOM) GOTO 25020
      JB = PNP(ARG)
      CALL GETCH(PNAME,ICH,JB)
      IRES=GETCHT(ICH)+NUMADD
      IF(ARG2 .EQ. NIL) GOTO 998
      N = ARG2-NUMADD
      IF (N.LT.1 .OR. N.GT.NCHTYP) GOTO 25010
      CALL SETCHT(ICH,N)
      GOTO 998
C
C IOTAB
C
12730 N1 = ARG-NUMADD
      IF (N1.LT.1 .OR. N1.GT.10) GOTO 25020
      IRES = MKNUM(IOTAB(N1))
      IF (N1.EQ.2) IRES = IRES-1
      IF(ARG2 .EQ. NIL) GOTO 998
      N = IOBUFF
      IF (N1.NE.1) GOTO 12735
      IF (ARG2.EQ.T) ARG2 = LUNINS+NUMADD
      GOTO 12740
12735 IF (N1.NE.5) GOTO 12745
      IF (ARG2.EQ.T) ARG2 = LUNUTS+NUMADD
12740 N = MAXLUN
12745 IF (N1.GE.9) N = MAXINT
      IF (ARG2.LE.NFREET) GOTO 25010
      N2 = GETNUM(ARG2)
      IF (N2.LT.1 .OR. N2.GT.N) GOTO 25010
      IOTAB(N1)=N2
      IF (N1.EQ.2)  CALL SHIFT(2)
      GOTO 998
C TAILP
12746 IF(NLISTP(ARG2)) GOTO 3090
      ARG2=CDR(ARG2)
      IF(ARG.EQ.ARG2) GOTO 998
      GOTO 12746
C
C UNPACK
C
12750 NCH=NCHARS(CONS(ARG,NIL),ARG2)
      IRES=NIL
12760 PRTPOS=PRTPOS-1
      IF(PRTPOS .EQ. 0) GOTO 12440
C                               12440 = RETURN TO NCHARS AND RESET PRBUF
      IC=PRBUFF(PRTPOS)
      ICT=GETCHT(IC)
      IF(ICT .LT. 13 .OR. ICT .GT. 22) GOTO 12770
      IRES=CONS(ICT-13+NUMADD,IRES)
      GOTO 12760
12770 ABUFF(1)=IC
      IRES=CONS(MATOM(1),IRES)
      GOTO 12760
C
C XCALL
C
12780 IF (ARG.LE.NFREET) GOTO 25020
      IRES = XCALL(GETNUM(ARG),ARG2)
      GOTO 998
C-----------------------------------------------------------------------
C             SUBR 3
C-----------------------------------------------------------------------
C
C APPLYA
C
15000 CONTINUE
      IPREV=TOPS
      TOPS=TOPS+1
      JACK(TOPS)=SFORM
      JILL(TOPS)=ARG3
15001 TEMP1=CAR(ARG3)
      IF(NLISTP(TEMP1)) GOTO 15002
      IF (TOPS.GT.HILL-60) GOTO 15001
      TOPS=TOPS+1
      ARG3=CDR(ARG3)
      JACK(TOPS)=CAR(TEMP1)
      JILL(TOPS)=CDR(TEMP1)
      GOTO 15001
15002 TOPS=TOPS+1
      JACK(TOPS)=0
      JILL(TOPS)=IPREV
      CALL APUSH(ENV)
      ENV=TOPS
      CALL FPUSH(18)
      GOTO 1500
C
C--R18    RETURN FROM APPLY
C
15010 CONTINUE
      CALL APOP(ENV)
      TOPS=JILL(TOPS)
      GOTO 998
C  APPLYSTK
15012 IPREV=TOPS
      TEMP1=GETNUM(ARG3)
      IF(ILLENV(TEMP1)) GOTO 25036
      TOPS=TOPS+1
      JACK(TOPS)=-TEMP1
      JILL(TOPS)=IPREV
      CALL APUSH(ENV)
      ENV=TOPS
      CALL FPUSH(1)
      GOTO 1500
C R-1
15013 TOPS=JILL(TOPS)
      CALL APOP(ENV)
      GOTO 998
C
C ARRAY
C
15015 I1CONS = ARG
      DO 15016 IREG = 1,3
      ARG = ARGS(IREG)
      IF (ARG.LE.NFREET) GOTO 25030
      ARGS(IREG+5) = GETNUM(ARG)
      IF (ARGS(IREG+5).LT.0) GOTO 25030
15016 CONTINUE
      TEMP1 = TEMP1-TEMP2-TEMP3
      IF (TEMP1.GE.0) GOTO 15017
      ARG = I1CONS
      GOTO 25030
15017 IRES = MATOM(-((TEMP1+3)*JBYTES + (TEMP2+1)*IBYTES
     *               + (TEMP3+1)*BYTES -3))
      IF (IRES.EQ.NIL) GOTO 998
C*SETC*      CALL SETCAR(IRES, ARRAY)
       CAR(IRES)= ARRAY 
      JBP = PNP(IRES)
      DO 15019 IREG = 1,3
15019 CALL ARRUTL(IRES,4,IREG,0,ARGS(IREG+5))
      GOTO 998
C
C PRIN0
C
15020 TEMP1=DREG(5)
      TEMP2=DREG(2)
      TEMP3=DREG(7)
      DREG(5)=ARG2
      DREG(2)=NIL
      DREG(7)=NIL
      IF (ARG3 .EQ. NIL) GOTO 15030
      DREG(2)=T
      IF (ARG3 .GT. NFREET) DREG(7)=T
15030 CALL PRIN1(ARG)
      DREG(5)=TEMP1
      DREG(2)=TEMP2
      DREG(7)=TEMP3
      GOTO 998
C
C MAPC = 12220
C
C MAPCAR = 12290
C
C
C PUT
C
15040 TEMP1 = ARG
      IF (TEMP1.EQ.NIL .OR. TEMP1.GT.NFREET) GOTO 25030
      IF (SPECAT(CAR(TEMP1))) GOTO 25030
15050 I = CDR(TEMP1)
      IF (.NOT.NLISTP(I)) GOTO 15060
C*SETC*      CALL SETCDR(TEMP1, CONS(ARG2,CONS(ARG3,NIL)))
       CDR(TEMP1)= CONS(ARG2,CONS(ARG3,NIL)) 
      GOTO 15070
15060 TEMP1 = I
      I = CDR(TEMP1)
      IF (CAR(TEMP1).NE.ARG2) GOTO 15080
C*SETC*      CALL SETCAR(I, ARG3)
       CAR(I)= ARG3 
15070 IRES = ARG3
      GOTO 998
15080 TEMP1 = I
      GOTO 15050
C
C RPLSTRING
C
15130 TEMP1 = ARG
      IF (1.NE.GETPN(ARG,MAIN,JB,IPL)) GOTO 25030
      ARG = ARG2
      IF (ARG.LE.NFREET) GOTO 25030
      I = GETNUM(ARG)
      IF (I.LE.0) GOTO 25030
      JB = JB+(I-1)
      IPL = IPL-(I-1)
      IF (IPL.LE.0) GOTO 3080
      ARG = ARG3
      IF (1.NE.GETPN(ARG,MAIN,JB2,IPL2)) GOTO 25030
C                                      NEVER RPL OUTSIDE GOAL STRING
      IF (IPL.GT.IPL2) IPL = IPL2
      IF (IPL.EQ.0) GOTO 3080
      IMAX = JB2+IPL-1
      DO 15140 I = JB2,IMAX
         CALL GETCH(PNAME,ICH,I)
         CALL PUTCH(PNAME,ICH,JB)
15140    JB = JB+1
      GOTO 3080
C
C SETA
C
15142 JNDEX = (NUMBP-1)*BYTES/JBYTES
      JPNAME(JNDEX) = ARG3
      IREG = 1
      GOTO 15148
C
C SETI
C
15144 IF (ARG3.LE.NFREET) GOTO 25026
      JNDEX = (NUMBP-1)*BYTES/IBYTES
      IPNAME(JNDEX) = GETNUM(ARG3)
      IREG = 2
      GOTO 15148
C
C SETR
C
15146 IF (ARG3.LE.NFREET) GOTO 25026
      JNDEX = NUMBP-1
      R = GTREAL(ARG3,I)
      IF (R.EQ.0.) R = I
      PNAME(JNDEX) = R
      IREG = 3
15148 IF (ARG2.LE.NFREET) GOTO 25025
      CALL ARRUTL(ARG,2,IREG,GETNUM(ARG2),JNDEX)
      IF (IBREAK) GOTO 2400
      IRES = ARG3
      GOTO 998
C
C SUBPAIR (OLD NEW S)
C
15150 IRES=SUBPR(ARG,ARG2,ARG3)
      GOTO 998
C
C SUBSTRING
C
15160 IF (1.NE.GETPN(ARG,MAIN,JB,IPL)) GOTO 25030
C                                      LOOK AT 2ND ARG
      TEMP1=ARG
      ARG = ARG2
      IF (ARG2.LE.NFREET) GOTO 25030
      ARG2 = GETNUM(ARG2)
      IF (ARG2.LE.0) ARG2 = 1+IPL +ARG2
      IF (ARG2.LT.1 .OR. ARG2.GT.1+IPL) GOTO 3090
C                                      LOOK AT 3RD ARG
      ARG = ARG3
      IF (ARG3.EQ.NIL) ARG3 = MKNUM(IPL)
      IF (ARG3.LE.NFREET) GOTO 25030
      ARG3 = GETNUM(ARG3)
      IF (ARG3.LT.0) ARG3 = 1+IPL +ARG3
      IF (ARG3.LT.ARG2-1 .OR. ARG3.GT.IPL) GOTO 3090
C                                      MAKE THE SUBSTRING
      IRES = MATOM(0)
      I=GETPN(TEMP1,MAIN,JB,IPL)
      IF (IRES.EQ.NIL) GOTO 998
C*SETC*      CALL SETCAR(IRES, SUBSTR)
       CAR(IRES)= SUBSTR 
C*SETC*      CALL SETCDR(IRES, CONS (MAIN, CONS
       CDR(IRES)= CONS (MAIN, CONS
     * (MKNUM (ARG2 + JB - PNP (MAIN)), MKNUM (1+ARG3 -ARG2))) 
C*SETC*     *)
C
      GOTO 998
C
C
C SYSERROR
C
15190 CALL MESS(ARG-NUMADD)
      CALL IPRINT(ARG2)
      CALL IPRINT(ARG3)
      GOTO 1
C-----------------------------------------------------------------------
C               SUBR N
C-----------------------------------------------------------------------
C
C CONCAT
C
16000 IFLG2 = T
      GOTO 16010
C      (FROM LIST)                     ARG NOW = ARGLIST
16005 TEMP1 = MATOM(0)
C                                      TERPRI WILL TEST OFLO
C                                      TEMP1 WILL GUARD FROM GARB
      NCH = NCHARS(ARG,NIL)
      CALL TERPRI
      IFLG2 = NIL
      IRES = TEMP1
      GOTO 12440
C
C LIST
C
16010    IRES=NIL
      IF(IARGS.EQ.0) GOTO 3300
      MAX = INDEX+IARGS-1
      DO 16020 KALLE=INDEX,MAX
      I=MAX-KALLE+INDEX
      TEMP1=JILL(I)
16020 IRES=CONS(TEMP1,IRES)
      GOTO 3300
C
C PLUS
C
16040 N=0
      IRFLAG = NIL
      IF(IARGS.EQ.0) GOTO 3105
      MAX = INDEX+IARGS-1
      DO 16060 I=INDEX,MAX
      IST=JILL(I)
      IF(IST .LE. NFREET) GOTO 25040
      S = GTREAL(IST,J)
      IF (S.NE.0..OR.IRFLAG.NE.NIL) GOTO 16044
      N = N+J
      GOTO 16060
16044 IF (IRFLAG.NE.NIL) GOTO 16046
      IRFLAG = T
      R = FLOAT(N)
16046 IF (S.EQ.0.) S = FLOAT(J)
      R = R+S
16060 CONTINUE
      GOTO 3105
C
C SYSFLAG
C
16070 IRES=NIL
      IF(IARGS.EQ.0) GOTO 3300
      N = JILL(INDEX) -NUMADD
      MAX=IARGS+INDEX-1
      IF (N.LT.1 .OR. N.GT.7) GOTO 25040
      IRES=DREG(N)
      IF(IARGS.EQ.1) GOTO 3300
      TEMP1 = JILL(INDEX+1)
      IF (TEMP1.GT.T) GOTO 25040
      DREG(N) = TEMP1
      GOTO 3300
C
C TIMES
C
16080 N=1
      IRFLAG = NIL
      IF(IARGS.EQ.0) GOTO 3105
      MAX=IARGS+INDEX-1
      DO 16090 I=INDEX,MAX
      IST=JILL(I)
      IF(IST .LE. NFREET) GOTO 25040
      S = GTREAL(IST,J)
      IF (S.NE.0..OR.IRFLAG.NE.NIL) GOTO 16084
      N = N*J
      GOTO 16090
16084 IF (IRFLAG.NE.NIL) GOTO 16086
      IRFLAG = T
      R = FLOAT(N)
16086 IF (S.EQ.0.) S = FLOAT(J)
      R = R*S
16090 CONTINUE
      GOTO 3105
C-----------------------------------------------------------------------
C             FSUBR
C             THIS IS A SEPARATE ENTRYPOINT ACCESSED DIRECTLY FROM EVAL
C               L = FSUBR, ARG2 = ARGUMENT LIST.
C-----------------------------------------------------------------------
18000 LL=L-SUBR
      FORM=ARG
      ARG=ARG2
18003 GOTO(18070,18135,2100,18010,18030,18020,18140,20060,2600,
     *     18040,18200,18050),LL
C         AND  BINDENV COND  FUNCTION GO   GO*   OR PROG PROGN
C        QUOTE SELECTQ SETQ
C
C COND = GOTO 2100
C
C FUNCTION
C
18010 ICAR=CAR(ARG)
      ICDR=CDR(ARG)
      IF(.NOT.NLISTP(ICDR))GOTO 18011
      IRES=ICAR
      GOTO 999
C                                    ! THE FUNCTION
18011 CALL APUSH(ICAR)
      ICDR=CAR(ICDR)
C                                    ! THE LIST
      IF(NLISTP(ICDR)) ICDR=NIL
c      ICDR=CAR(ICDR)   THIS LINE REMOVED   20 October 1984
      CALL APUSH(ICDR)
      ARG=ICDR
      CALL FPUSH(27)
      GOTO 2000
C R--27
C
18012 CONTINUE
      CALL APOP(ICDR)
      CALL APOP(ICAR)
      IF(ICDR.EQ.NIL)GOTO 18017
      TEMP1=CONS(NIL,NIL)
      TEMP2=TEMP1
18013 IF(NLISTP(IRES))GOTO 18015
      IF41=CAR(ICDR)
      IF42=CAR(IRES)
C*SETC*      CALL SETCDR(TEMP1,CONS(CONS(IF41,IF42),NIL))
       CDR(TEMP1)=CONS(CONS(IF41,IF42),NIL) 
      TEMP1=CDR(TEMP1)
      ICDR=CDR(ICDR)
      IRES=CDR(IRES)
      GOTO 18013
18015 TEMP2=CDR(TEMP2)
      IRES=CONS(FUNARG,CONS(ICAR,CONS(TEMP2,NIL)))
      GOTO 999
18017 IRES=CONS(FUNARG,CONS(ICAR,NIL))
      GOTO 999
C
C GO*
C
18020 IRET=2
      ARG=CAR(ARG)
      GOTO 20000
C
C GO
C
18030 ARG=CAR(ARG)
      IRET=1
      GOTO 20000
C
C QUOTE
C
18040 IRES=CAR(ARG)
      GOTO 999
C
C SETQ
C
18050 ICAR=CAR(ARG)
      CALL APUSH2(L,ICAR)
      ICDR=CDR(ARG)
      IF (NLISTP(ICDR)) ICDR = NIL
      ARG=CAR(ICDR)
      IP=IP+1
      STACK(IP)=10
C                                          ! CALL FPUSH(10)
      GOTO 1600
C
C--R10        RETURN FROM EVAL
C
18060 ARG2=IRES
      CALL APOP2(ARG,L)
      TOPS=TOPS+1
      JILL(TOPS)=TOPS-1
      GOTO 12660
C             TO SET
C
C AND
C
18069 ARG=T
      GOTO 999
18070 IF (ARG.EQ.NIL) GOTO 18069
      CALL APUSH(ARG)
      K=ARG
18090 ARG=CAR(K)
      CALL FPUSH(12)
      GOTO 1600
C
C--R12        RETURN FROM EVAL
C
18100 IF (IRES.LE.NIL) GOTO 18120
      K=STACK(JP)
      K=CDR(K)
      IF (.NOT.NLISTP(K)) GOTO 18130
18120 JP=JP+1
      GOTO 999
18130 STACK(JP)=K
      GOTO 18090
C
C BINDENV
18135 IF(NLISTP(ARG))GOTO 18139
      ARG=CAR(ARG)
      LOCAL=ENV
      IF (LOCAL.LE.0)GOTO 18139
      GOTO 18137
18136 LOCAL=-JACK(LOCAL)
      IF (LOCAL.LE.0) GOTO 18139
18137 LOCALE=JILL(LOCAL)+2
      K=LOCAL
18138 K=K-1
      IF (K.LT.LOCALE) GOTO 18136
      IF (JACK(K).NE.ARG) GOTO 18138
      TEMP1=-JACK(LOCAL)
      IRES=MKNUM(TEMP1)
      GOTO 999
18139 IRES=NUMADD
      GOTO 999
C
C
C OR
C
18140 CALL APUSH(ARG)
      K=ARG
18160 ARG=CAR(K)
      CALL FPUSH(13)
      GOTO 1600
C
C--R13        RETURN FROM EVAL
C
18170 IF (IRES.GT.NIL) GOTO 18120
      ICDR=STACK(JP)
      K=CDR(ICDR)
      IF (NLISTP(K)) GOTO 18120
      STACK(JP)=K
      GOTO 18160
C
C SELECTQ
C
18200 ARG=CAR(ARG)
      CALL APUSH(FORM)
      IP=IP+1
      STACK(IP)=15
      GOTO 1600
C
C--R15        RETURN FROM EVAL
C
18210 CALL APOP(FORM)
      ARG2=CDR(FORM)
18220 ARG2=CDR(ARG2)
      IF (CDR(ARG2) .EQ. NIL) GOTO 18280
C             TEST IF ARG EQ OR MEMB CAAR (ARG2)
C             EQ-TEST
      ICAR=CAR(ARG2)
      IF(NLISTP(ICAR)) GOTO 25080
      ICAR=CAR(ICAR)
      IF (ARG.EQ.ICAR) GOTO 18270
18240 IF (NLISTP(ICAR)) GOTO 18220
C             MEMB-TEST
      IF (ARG.EQ.CAR(ICAR)) GOTO 18270
      ICAR=CDR(ICAR)
      GOTO 18240
C             SUCCESS. SET-UP ARG AND JUMP TO EVLAST
18270 ICAR=CAR(ARG2)
      ARG=CDR(ICAR)
      GOTO 2600
C             FAILURE. SET-UP ARG AND JUMP TO EVAL
18280 ARG=CAR(ARG2)
      GOTO 1600
C-----------------------------------------------------------------------
C             PROG FEATURES
C
C PROGN = 2600 (EVLAST)
C
C GO
C
20000 I=IPP
      J=JPP
20010 IF (I.LE.0) GOTO 20050
      K = STACK(J-1)
20020 IF (NLISTP(K)) GOTO 20040
      IF(ARG .EQ. CAR(K)) GOTO 20030
      K=CDR(K)
      GOTO 20020
C               LABEL FOUND. RESET TO PROG STATUS AND
C               CONTINUE PROG LOOP.
20030 IPP=I
      JPP=J
      IP = IPP+3
      JP = JPP-2
      TOPS=STACK(IP)
      ENV=TOPS
      ARG=CDR(K)
      STACK(JP)=ARG
      GOTO 20110
C               LABEL NOT FOUND
20040 J = STACK(I+2)
      I = STACK(I+1)
      GOTO 20010
C     PROG LABEL NOT FOUND, TEST IF GO OR GO*
20050 IF (IRET .EQ. 2) GOTO 999
C              GO*, NORMAL RETURN
      ERRTYP=5
      GOTO 2400
C              GO, CALL SYSERROR
C
C PROG
C
C             PROLOGUE OF PROG
20060 IPREV=TOPS
      TOPS=TOPS+1
      JACK(TOPS)=SFORM
      JILL(TOPS)=FORM
      ICAR=CAR(ARG)
C                                     ! THATS VARLIST
      JP = JP-2
C                                     ! MAKE PLACE FOR 2 ITEMS ON STACK
      STACK(JP+1)=CDR(ARG)
C                                     ! THE PROGBODY
C
C        SPREAD ARGS ON STACK
C        ====================
C
20070 IF(ICAR .LE. NATOM) GOTO 20093
C                                     ! READY
      TEMP1=CAR(ICAR)
      IF(TEMP1 .LE. NATOM) GOTO 20090
C                                     ! SET VAR TO NIL
      TOPS=TOPS+1
      JACK(TOPS)=CAR(TEMP1)
      TEMP2=CDR(TEMP1)
      JILL(TOPS)=CAR(TEMP2)
      GOTO 20091
20090 TOPS=TOPS+1
      JACK(TOPS)=TEMP1
      JILL(TOPS)=NIL
20091 ICAR=CDR(ICAR)
      GOTO 20070
C        READY FIX BLOCK
20093 TOPS=TOPS+1
      JACK(TOPS)=-IPREV
      JILL(TOPS)=IPREV+1
C
C
C      EVAL PROGVARS
C      =============
C
20094 JILL(TOPS)=JILL(TOPS)+1
      IF (JILL(TOPS).EQ.TOPS) GOTO 20099
C                                            ! READY
      ARG=JILL(JILL(TOPS))
      CALL FPUSH(23)
      GOTO 1600
C R--23
20095 IF41=JILL(TOPS)
      JILL(IF41)=IRES
      GOTO 20094
20099 JILL(TOPS)=-JACK(TOPS)
      JACK(TOPS)=-ENV
      ENV=TOPS
C
C               ENTER PROG. NEW STACK POSITIONS ARE
C               CURRENT BODY, BODY, TOPS
C               JP            JP+1  JP+2
C
20100 ARG=STACK(JP+1)
      STACK(JP)=ARG
      STACK(IP+3) = TOPS
      STACK(IP+2) = JPP
      STACK(IP+1) = IPP
      IP = IP+3
      IPP = IP-3
      JPP = JP+2 
C               START PROG LOOP
20110 IF (NLISTP(ARG)) GOTO 20150
      ARG=CAR(ARG)
      IF (ARG.LE.NATOM) GOTO 20130
C                                           ! A LABEL
C             FPUSH(11)
      IP=IP+1
      STACK(IP)=11
      GOTO 1600
C
C--R11        RETURN FROM EVAL
C
20130 ICDR=STACK(JP)
      ARG=CDR(ICDR)
      STACK(JP)=ARG
      IF(ARG .NE. NIL) GOTO 20110
      GOTO 20170
C
C RETURN
C
20150 IF (IPP) 25130,20160,20165
20160 ERRTYP=6
      GOTO 2400
20165 CONTINUE 
      TOPS=JILL(TOPS)
20170 IP=IPP
      IF (IPP.LT.0) GOTO 25130
      JP=JPP
      TOPS= STACK(IP+3)
      JPP = STACK(IP+2)
      IPP = STACK(IP+1)
      GOTO 997
C-----------------------------------------------------------------------
C
C             RESET AND ERROR RETURNS.
C
C-----------------------------------------------------------------------
C
C             ERRORS WHICH APPLY ERROR FUNCTION
C
C SUBR1 ERRORS
C
25000 ERRTYP=7
      GOTO 2400
C
C SUBR2 ERRORS
C
25010 ARG = ARG2
25020 ERRTYP=8
      GOTO 2400
C
C SUBR3 ERRORS
C
25025 ARG = ARG2
      GOTO 25030
25026 ARG = ARG3
25030 ERRTYP = 9
      GOTO 2400
C ENVIRONMENT ERRORS
25035 ARG=ARG2
      GOTO 25037
25036 ARG=ARG3
25037 ERRTYP = 18
      GOTO 2400
C
C SUBRN ERROR ON ENTRY HERE, ARGS ARE ON THE A-STACK
C             MAX POINTS TO THE FIRST ARG,JP POINTS TO THE LAST.
C             IARGS=NR AF ARGS
C             BEFORE CALLING ERRORFUNCTION RESET ARG TO THE LIST OF ARGS
25040 ERRTYP=10
25050 ARG=NIL
      IF (IARGS.EQ.0) GOTO 2400
      DO 25070 I=MAX,INDEX,-1
25070 ARG=CONS(JILL(I),ARG)
      GOTO 2400
C
C FSUBR ERROR
C
25080 L = CAR(FORM)
      ARG = CDR(FORM)
      ERRTYP = 23
      GOTO 2400
C
C             ERRORS THAT RESTART THE SYSTEM
C
C PDL FULL
C--R16
C
25090 ERRTYP=12
      IF(MIDDL .LT. 10) GOTO 1
      MIDDL=MIDDL/2
      GOTO 2400
25095 ERRTYP=15
      HILLW=HILLW+65
      IF(HILLW.GT.HILL-20) GOTO 25096
      GOTO 2400
25096 CALL MESS(11)
      GOTO 1
C
C PDL EMPTY
C--R17
C
25100 ERRTYP=13
      FORM=NIL
      ARG=NIL
      L=LISPX
      GOTO 2400
C
C INTERNAL TROUBLE (INVALID STACK POINTER)
C
25130 CALL MESS(16)
C                                      DUMMY RETURN
      IF (.FALSE.) RETURN
      GOTO 1
      END
C
      SUBROUTINE SHOSTK
      INCLUDE 'F4COM.FOR'
      INTEGER IOTAB(10)
      EQUIVALENCE (LUNIN,IOTAB(1))
      ISAV10=IOTAB(10)
      ISAV9=IOTAB(9)
C                                             ! WE SAVE OLD PRINT LEVEL
C                                             ! AND LENGTH. WE USE 2 AND 3
C                                             ! IN THIS OUTPUT.
      IOTAB(10)=2
      IOTAB(9)=3
      K=TOPS
C
      CALL MESS(40)
      PRTPOS=6
      CALL PRIINT(ENV)
      PRTPOS=17
      CALL PRIINT(TOPS)
      CALL TERPRI
1212  IF(K.LE.0) GOTO 9999
      TEMP2=JILL(K)
      TEMP1=JACK(K)
      IF(TEMP1.LE.0)GOTO 777
      PRTPOS=1
      PRBUFF(PRTPOS)=NOCHAR
      PRTPOS=PRTPOS+1
      CALL PRIINT(K)
      PRTPOS=6
1213  CALL PRIN1(TEMP1)
      PRTPOS=PRTPOS+1
      CALL IPRINT(TEMP2)
      K=K-1
      GOTO 1212
777   IF(IBREAK)GOTO 9999
      PRTPOS=1
      PRBUFF(PRTPOS)=NOCHAR
      PRTPOS=PRTPOS+1
      CALL PRIINT(K)
      PRTPOS=6
      PRBUFF(PRTPOS)=ILBCHR
      PRTPOS=PRTPOS +1
      CALL PRIINT(TEMP1)
      PRTPOS=PRTPOS +2
      CALL PRIINT(TEMP2)
      PRBUFF(PRTPOS)=IRBCHR
      PRTPOS=PRTPOS+1
      CALL TERPRI
      K=K-1
      GOTO 1212
9999  CALL MESS(14)
      CALL TERPRI
      IOTAB(10)=ISAV10
      IOTAB(9)=ISAV9
      RETURN
      END
